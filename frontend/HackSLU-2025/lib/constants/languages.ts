/**
 * Supported languages for speech recognition and synthesis
 */

export interface Language {
  /**
   * Language code (BCP 47)
   */
  code: string;
  
  /**
   * Display name for the language
   */
  name: string;
  
  /**
   * ISO country code for flag display
   */
  flag: string;
}

/**
 * List of supported languages
 */
export const SUPPORTED_LANGUAGES: Language[] = [
  { code: 'en-US', name: 'English (US)', flag: 'ðŸ‡ºðŸ‡¸' },
  { code: 'es-ES', name: 'Spanish', flag: 'ðŸ‡ªðŸ‡¸' },
  { code: 'fr-FR', name: 'French', flag: 'ðŸ‡«ðŸ‡·' },
  { code: 'de-DE', name: 'German', flag: 'ðŸ‡©ðŸ‡ª' },
  { code: 'it-IT', name: 'Italian', flag: 'ðŸ‡®ðŸ‡¹' },
  { code: 'ja-JP', name: 'Japanese', flag: 'ðŸ‡¯ðŸ‡µ' },
  { code: 'ko-KR', name: 'Korean', flag: 'ðŸ‡°ðŸ‡·' },
  { code: 'zh-CN', name: 'Chinese (Simplified)', flag: 'ðŸ‡¨ðŸ‡³' },
  { code: 'pt-BR', name: 'Portuguese (Brazil)', flag: 'ðŸ‡§ðŸ‡·' },
  { code: 'ru-RU', name: 'Russian', flag: 'ðŸ‡·ðŸ‡º' },
];

/**
 * Default language code
 */
export const DEFAULT_LANGUAGE_CODE = 'en-US';

/**
 * Get a language by its code
 */
export function getLanguageByCode(code: string): Language | undefined {
  return SUPPORTED_LANGUAGES.find(lang => lang.code === code);
}

/**
 * Get default language
 */
export function getDefaultLanguage(): Language {
  return SUPPORTED_LANGUAGES[0];
} 